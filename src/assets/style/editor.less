// ===================
// GLOBAL CODEMIRROR STYLES
// ===================

/*
  Generic CodeMirror Editor System
  
  Use the `full-width-height-editor` class for any CodeMirror editor container.
  Available variants:
  
  - .full-width-height-editor.input-editor     - Input editors with borders
  - .full-width-height-editor.output-editor    - Read-only output editors  
  - .full-width-height-editor.card-editor      - Editors inside cards
  - .full-width-height-editor.pipeline-editor  - Main pipeline editors
  
  Example usage:
  <div class="full-width-height-editor input-editor card-editor">
    <CodeMirror />
  </div>
  
  This approach uses overflow: hidden + min-width: 0 instead of display: table
  to prevent width expansion while maintaining proper height behavior.
*/

// Generic full width/height editor container
.full-width-height-editor {
  width: 100%;
  height: 100%;
  flex: 1;
  min-height: 0;
  min-width: 0; // Critical for preventing flex item expansion
  overflow: hidden; // Prevent width expansion
  position: relative; // For absolute positioning of CodeMirror scroller
  border-radius: 4px;
  .cm-editor {
    &.cm-focused {
      outline: 0;
    }

    // Force scroller to respect container bounds
    .cm-scroller {
      overflow-x: auto !important;
      overflow-y: auto !important;
      max-width: 100% !important; // Force scroller to not exceed container
      width: 100% !important; // Override content-based width
      box-sizing: border-box !important;
    }

    // Ensure content area respects bounds
    .cm-content {
      white-space: pre-wrap;
      word-wrap: break-word;
      overflow-wrap: break-word;
      max-width: 100%; // Prevent content from expanding beyond container
      box-sizing: border-box;
    }

    // Force individual lines to wrap
    .cm-line {
      max-width: 100%;
      word-wrap: break-word;
      overflow-wrap: break-word;
      white-space: pre-wrap;
    }
  }

  .cm-editor {
    border: 1px solid var(--color-border);
  }
}
